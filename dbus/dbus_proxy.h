/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p dbus_proxy /home/scott/GIT/rpi-fan-serve/dbus/org.scotthamilton.RpiFanServe.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DBUS_PROXY_H
#define DBUS_PROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.scotthamilton.RpiFanServe
 */
class OrgScotthamiltonRpiFanServeInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.scotthamilton.RpiFanServe"; }

public:
    OrgScotthamiltonRpiFanServeInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgScotthamiltonRpiFanServeInterface();

    Q_PROPERTY(qlonglong CacheLifeExpectancy READ cacheLifeExpectancy WRITE setCacheLifeExpectancy)
    inline qlonglong cacheLifeExpectancy() const
    { return qvariant_cast< qlonglong >(property("CacheLifeExpectancy")); }
    inline void setCacheLifeExpectancy(qlonglong value)
    { setProperty("CacheLifeExpectancy", QVariant::fromValue(value)); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace scotthamilton {
    typedef ::OrgScotthamiltonRpiFanServeInterface RpiFanServe;
  }
}
#endif
